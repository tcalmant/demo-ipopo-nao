# This is the default configuration file, which comes with every openHAB distribution.
# You should do a copy of it with the name 'openhab.cfg' and configure your personal
# settings in there. This way you can be sure that they are not overwritten, if you
# update openHAB one day.


####################################################################################### 
#####                        General configurations                               #####
####################################################################################### 

# Configuration folders (must exist as a subdirectory of "configurations"; the value
# tells the number of seconds for the next scan of the directory for changes. A
# value of -1 deactivates the scan).
# A comma separated list can follow after the refresh value. This list defines a filter
# for valid file extensions for the models.
folder:items=10,items
folder:sitemaps=10,sitemap
folder:rules=10,rules

# configures the security options. The following values are valid:
# ON = security is switched on generally
# OFF = security is switched off generally
# EXTERNAL = security is switched on for external requests 
#            (e.g. originating from the Internet) only
# (optional, defaults to 'OFF')
#security:option=

# the Netmask to define a range of internal IP-Addresses which doesn't require
# authorization (optional, defaults to '192.168.1.0/24')
#security:netmask=


# The refresh interval for the main configuration file. A value of '-1' 
# deactivates the scan (optional, defaults to '-1' hence scanning is deactivated)
#mainconfig:refresh=


#######################################################################################
#####                        Binding configurations                               #####
#######################################################################################


############################### Philips Hue Binding ###################################
#
# IP address of Hue Bridge (optional, default is auto-discovery)
#hue:ip=

# Default secret key for the pairing of the Philips Hue Bridge.
# It has to be between 10-40 (alphanumeric) characters 
# This may be changed by the user for security reasons.
hue:secret=openHABRuntime


################################ Z-Wave  Binding ######################################
#
# The Z-Wave controller port. Valid values are e.g. COM1 for Windows and /dev/ttyS0 or
# /dev/ttyUSB0 for Linux
#zwave:port=

# Z-Wave binding refresh value (optional, defaults to 10000)
#zwave:refresh=
# Z-Wave binding refresh interval threshold (optional, defaults to every 6 times)
#zwave:refreshThreshold=

################################ Nikobus Binding ######################################
#
# Serial Port connected to pc-link. Valid values are e.g. COM1 for Windows and /dev/ttyS0 or
# /dev/ttyUSB0 for Linux
#nikobus:serial.port=

# Directory path where the command cache file should be created.  
# Optional. Defaults to the users' home directory.
#nikobus:cache.location=

# Perform a module status query every x seconds (optional, defaults to 600 (10 minutes)). 
#nikobus:refresh=

################################# EnOcean Binding #####################################
# EnOcean USB adapter serial port
enocean:serialPort=/dev/cu.usbserial-FTWTOGI0

############################### Philips Hue Binding ###################################
# IP address of Hue Bridge (optional, default is auto-discovery)
hue:ip=192.168.0.105
# user name of Hue Bridge, it is a local account
hue:username=1234567890
hue:secret=pairingKeyForOpenHABSystem


################################# MQTT Transport ######################################
#
# Define your MQTT broker connections here for use in the MQTT Binding or MQTT
# Persistence bundles. Replace <broker> with a id you choose.
#

# URL to the MQTT broker, e.g. tcp://localhost:1883 or ssl://localhost:8883

mqtt:nao.url=tcp://192.168.0.104:1883

mqtt-persistence:broker=nao

mqtt-persistence:message=%1$s, %3$s

#### OUTBINDING
mqtt-eventbus:broker=nao
mqtt-eventbus:statePublishTopic=/nao/${item}/state
mqtt-eventbus:commandPublishTopic=/nao/${item}/command


#mqtt:<broker>.async=<async>
